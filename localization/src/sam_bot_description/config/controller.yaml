# controller_server:
#   ros__parameters:
#     use_sim_time: False
#     controller_frequency: 10.0
#     min_x_velocity_threshold: 0.001
#     min_y_velocity_threshold: 0.5
#     min_theta_velocity_threshold: 0.001
#     failure_tolerance: 0.3
#     # progress_checker_plugin: "progress_checker"
#     # goal_checker_plugins: ["general_goal_checker"] 
#     controller_plugins: ["FollowPath"]

#     # Progress checker parameters
#     # progress_checker:
#     #   plugin: "nav2_controller::SimpleProgressChecker"
#     #   required_movement_radius: 0.5
#     #   movement_time_allowance: 10.0
#     # # Goal checker parameters
#     # general_goal_checker:
#     #   stateful: True
#     #   plugin: "nav2_controller::SimpleGoalChecker"
#     #   xy_goal_tolerance: 0.25
#     #   yaw_goal_tolerance: 0.25
#     # DWB parameters
#     FollowPath:
#       plugin: "dwb_core::DWBLocalPlanner"
#       debug_trajectory_details: True
#       min_vel_x: 1.0
#       min_vel_y: 0.0
#       max_vel_x: 3.0
#       max_vel_y: 0.0
#       max_vel_theta: 2.0
#       min_speed_xy: 1.0
#       max_speed_xy: 6.0
#       min_speed_theta: 0.0
#       acc_lim_x: 10.0
#       acc_lim_y: 0.0
#       acc_lim_theta: 10.0
#       decel_lim_x: -0.5
#       decel_lim_y: 0.0
#       decel_lim_theta: -0.5
#       vx_samples: 20
#       vy_samples: 0
#       vtheta_samples: 40
#       sim_time: 1.7
#       linear_granularity: 0.05
#       angular_granularity: 0.025
#       transform_tolerance: 0.2
#       xy_goal_tolerance: 0.25
#       trans_stopped_velocity: 0.25
#       short_circuit_trajectory_evaluation: True
#       stateful: True
#       critics: ["RotateToGoal", "Oscillation", "ObstacleFootprint", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
#       BaseObstacle.scale: 0.02
#       PathAlign.scale: 32.0
#       PathAlign.forward_point_distance: 0.1
#       GoalAlign.scale: 24.0
#       GoalAlign.forward_point_distance: 0.1
#       PathDist.scale: 32.0
#       GoalDist.scale: 24.0
#       RotateToGoal.scale: 32.0
#       RotateToGoal.slowing_factor: 5.0
#       RotateToGoal.lookahead_time: -1.0
# local_costmap:
#   local_costmap:
#     ros__parameters:
#       update_frequency: 5.0
#       publish_frequency: 2.0
#       global_frame: odom
#       robot_base_frame: base_link
#       use_sim_time: False
#       rolling_window: true
#       width: 1
#       height: 1
#       resolution: 0.05
#       footprint: '[[0.3,0.5],[0.3,-0.5],[-0.3,-0.5],[-0.3,0.5]]'
#       plugins: ["voxel_layer", "inflation_layer"]
#       filters: ["keepout_filter"]
#       #filters: ["speed_filter"]
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 3.0
#         inflation_radius: 0.35
#       voxel_layer:
#         plugin: "nav2_costmap_2d::VoxelLayer"
#         enabled: True
#         publish_voxel_map: True
#         origin_z: 0.0
#         z_resolution: 0.05
#         z_voxels: 16
#         max_obstacle_height: 2.0
#         mark_threshold: 0
#         observation_sources: scan
#         scan:
#           topic: /scan
#           max_obstacle_height: 2.0
#           clearing: True
#           marking: True
#           data_type: "LaserScan"
#           raytrace_max_range: 3.0
#           raytrace_min_range: 0.0
#           obstacle_max_range: 2.5
#           obstacle_min_range: 0.0
#       static_layer:
#         map_subscribe_transient_local: True
#       always_send_full_costmap: True
#       keepout_filter:
#         plugin: "nav2_costmap_2d::KeepoutFilter"
#         enabled: True
#         filter_info_topic: "/costmap_filter_info"
#       #speed_filter:
#         #plugin: "nav2_costmap_2d::SpeedFilter"
#         #enabled: True
#         #filter_info_topic: "/costmap_filter_info"
#         #speed_limit_topic: "/speed_limit"

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] 
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 50.0
    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.8
      max_vel_y: 0.0
      max_vel_theta: 0.5
      min_speed_xy: 0.0
      max_speed_xy: 0.8
      min_speed_theta: 0.0
      acc_lim_x: 10.0
      acc_lim_y: 10.0
      acc_lim_theta: 3.2
      decel_lim_x: -100.0
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.0
      linear_granularity: 0.1
      angular_granularity: 0.01
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.5
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "ObstacleFootprint", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: True
      width: 3
      height: 3
      resolution: 0.05
      # robot_radius: 1.0
      footprint: '[[0.6,0.9],[0.6,-0.9],[-0.6,-0.9],[-0.6,0.9]]'
      plugins: ["voxel_layer", "inflation_layer"]
      filters: ["keepout_filter"]
      #filters: ["speed_filter"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 1.5
        inflation_radius: 0.35
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"